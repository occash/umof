#ifndef DEFINES_H
#define DEFINES_H

#include <vector>
#include <list>

class Any;
struct Type;
class Object;

typedef std::vector<Any> ArgPack;
typedef std::list<std::string> StringList;
typedef std::list<Type> TypeList;

typedef Any(*InvokeFun)(int argc, const Any *);
typedef Any(*InvokeMem)(Object *, int argc, const Any *);
typedef Any(*ReadMem)(Object *);
typedef void(*WriteMem)(Object *, const Any&);

#define VA_NARGS_IMPL(_1, _2, _3, _4, _5, _6, _7, _8, \
#define VA_NARGS_IMPL_(_1, _2, _3, _4, _5, _6, _7, _8, \
						_9, _10, _11, _12, _13, _14, _15, _16, \
						_17, _18, _19, _20, _21, _22, _23, _24, \
						_25, _26, _27, _28, _29, _30, _31, _32, \
					N, ...) N
#define VA_NARGS_IMPL(tuple) VA_NARGS_IMPL_ tuple
#define VA_NARGS(...) VA_NARGS_IMPL((__VA_ARGS__,  \
						32, 31, 30, 29, 28, 27, 26, 25, \
						24, 23, 22, 21, 20, 19, 18, 17, \
						16, 15, 14, 13, 12, 11, 10, 9, \
						8, 7, 6, 5, 4, 3, 2, 1))

#define STRINGIFY(X)            #X

#define EXPAND(X)               X
#define FIRSTARG(X, ...)        (X)
#define RESTARGS(X, ...)        (__VA_ARGS__)

#define FOREACH(MACRO, LIST)    FOREACH_(VA_NARGS LIST, MACRO, LIST)
#define FOREACH_(N, M, LIST)    FOREACH__(N, M, LIST)
#define FOREACH__(N, M, LIST)   FOREACH_##N(M, LIST)
#define FOREACH_1(M, LIST)      M LIST
#define FOREACH_2(M, LIST)      EXPAND(M FIRSTARG LIST) FOREACH_1(M, RESTARGS LIST)
#define FOREACH_3(M, LIST)      EXPAND(M FIRSTARG LIST) FOREACH_2(M, RESTARGS LIST)
#define FOREACH_4(M, LIST)      EXPAND(M FIRSTARG LIST) FOREACH_3(M, RESTARGS LIST)
#define FOREACH_5(M, LIST)      EXPAND(M FIRSTARG LIST) FOREACH_4(M, RESTARGS LIST)
#define FOREACH_6(M, LIST)      EXPAND(M FIRSTARG LIST) FOREACH_5(M, RESTARGS LIST)
#define FOREACH_7(M, LIST)      EXPAND(M FIRSTARG LIST) FOREACH_6(M, RESTARGS LIST)
#define FOREACH_8(M, LIST)      EXPAND(M FIRSTARG LIST) FOREACH_7(M, RESTARGS LIST)
#define FOREACH_9(M, LIST)      EXPAND(M FIRSTARG LIST) FOREACH_8(M, RESTARGS LIST)
#define FOREACH_10(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_9(M, RESTARGS LIST)
#define FOREACH_11(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_10(M, RESTARGS LIST)
#define FOREACH_12(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_11(M, RESTARGS LIST)
#define FOREACH_13(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_12(M, RESTARGS LIST)
#define FOREACH_14(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_13(M, RESTARGS LIST)
#define FOREACH_15(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_14(M, RESTARGS LIST)
#define FOREACH_16(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_15(M, RESTARGS LIST)
#define FOREACH_17(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_16(M, RESTARGS LIST)
#define FOREACH_18(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_17(M, RESTARGS LIST)
#define FOREACH_19(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_18(M, RESTARGS LIST)
#define FOREACH_20(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_19(M, RESTARGS LIST)
#define FOREACH_21(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_20(M, RESTARGS LIST)
#define FOREACH_22(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_21(M, RESTARGS LIST)
#define FOREACH_23(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_22(M, RESTARGS LIST)
#define FOREACH_24(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_23(M, RESTARGS LIST)
#define FOREACH_25(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_24(M, RESTARGS LIST)
#define FOREACH_26(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_25(M, RESTARGS LIST)
#define FOREACH_27(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_26(M, RESTARGS LIST)
#define FOREACH_28(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_27(M, RESTARGS LIST)
#define FOREACH_29(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_28(M, RESTARGS LIST)
#define FOREACH_30(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_29(M, RESTARGS LIST)
#define FOREACH_31(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_30(M, RESTARGS LIST)
#define FOREACH_32(M, LIST)     EXPAND(M FIRSTARG LIST) FOREACH_31(M, RESTARGS LIST)

#endif